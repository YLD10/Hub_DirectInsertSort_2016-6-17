#include <stdio.h>
#include <stdlib.h>
#include "DirectInsert.h"

int main()
{
    STU *stu;
    int n;

    Input(&stu,&n);

    DirectInsertSort(stu,n);

    Printf(stu,n);

    return 0;
}
————————————————————————————————————————————————————————————————
#include <stdio.h>
#include <stdlib.h>
#include "DirectInsert.h"

void DirectInsertSort (STU stu[], int n) {
    STU temp;
    int i, j;

    for (i = 0; i < n-1; i ++) {
        temp = stu[i+1];
        j = i;

        while (j > -1 && temp.key.id <= stu[j].key.id) {
            stu[j+1] = stu[j];
            j --;
        }

        stu[j+1] = temp;
    }
}

void Printf (STU stu[], int n) {
    int i;

    for (i = 0; i < n; i ++)
        printf("%d\t%s\n", stu[i].key.id, stu[i].key.name);
}

void Input (STU **stu, int *n) {
    int i;

    printf("\nPlease input the number of students:");
    scanf("%d", n);
    if (*n <= 0) exit(0);

    *stu = (STU *)malloc(sizeof(STU) * (*n));
    if (*stu == NULL) exit(0);

    puts("\nPlease input students' id and name");
}
——————————————————————————————————————————————————————————————————
#ifndef DirectInsert_H
#define DirectInsert_H
#define MAX 20

typedef struct {
    int id;
    char name[MAX];
} KeyType;

typedef struct {
    KeyType key;
} STU;

void Input (STU **stu, int *n);
void Printf (STU stu[], int n);
void DirectInsertSort (STU stu[], int n);

#endif // DirectInsert_H










































    for (i = 0;i < *n; i ++)
        scanf("%d%s", &((*stu)[i].key.id), (*stu)[i].key.name);

    puts("\nSorting......\n");
}
